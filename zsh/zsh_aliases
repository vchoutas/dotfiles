alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"

# get my IP address
alias myip="curl http://ipecho.net/plain; echo"
# Better df
alias df="pydf"
alias gst="git status --column"

alias pwdopen="xdg-open $PWD"

alias pwdopen="xdg-open $PWD"

function psdownload {
    if [ ! "$#" -gt 0 ]; then echo "Need a path to download!"; return 1; fi
    if [ -z $1 ]; then
        echo $(realpath .)
        rsync -arv --progress ps-work:"$1" $PWD
    else
        rsync -arv --progress ps-work:"$1" $2
    fi
}

# Function used to choose the directory where the virtual environments are
# located
function setvenvhome {
    if [ -z $1 ]; then
        echo "Usage: setvenvhome path_to_virtual env_home"
        return 1
    fi
    echo "Setting virtual environment base dir to $1"

    export PIP_VIRTUALENV_BASE="$1/.virtualenvs"
    export WORKON_HOME="$1/.virtualenvs"
    export PROJECT_HOME="$1/Devel"
}

function trash {
    if [ $# -eq 0 ]; then
        echo "Usage: trash <file1> ... <fileN> <folder1> <folderN>"
        echo "Moves data to trash folder"
        return 1
    fi
    for arg in "$@"
    do
        mv $arg $TRASH/files
    done
}

## Function used to extract files
function extract {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
 else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}

eif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
   fif $1 | xargs -n1 nvim
}
